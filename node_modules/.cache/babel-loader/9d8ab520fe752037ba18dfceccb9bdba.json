{"ast":null,"code":"import _slicedToArray from \"/Users/d3rickjy/Desktop/ChatApp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/d3rickjy/Desktop/ChatApp/src/App.js\";\nimport React, { useState } from 'react'; //mport logo from './logo.svg';\n\nimport './App.css';\nimport { db } from './db';\nimport NamePicker from './namepicker'; // import { BrowserRouter, Royte } from 'react-router-dom'\n\nfunction App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        messages = _useState2[0],\n        setMessages = _useState2[1]; //initial state should be an empty array\n\n\n  console.log(messages);\n  return React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"logo-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"logo\",\n    alt: \"pic\",\n    src: \"https://www.pngarts.com/files/1/Message-PNG-Image-with-Transparent-Background.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Talkie\")), React.createElement(\"div\", {\n    class: \"namepicker\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \" \", React.createElement(NamePicker, {\n    onSave: name => {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"messages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, messages.map((m, i) => {\n    return React.createElement(\"div\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, m);\n  }), React.createElement(TextInput, {\n    onSend: text => {\n      setMessages([text, ...messages]); //... spread operator\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })));\n}\n\nfunction TextInput(props) {\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1]; // normal js comment\n\n\n  return React.createElement(\"div\", {\n    className: \"text-input-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: text,\n    className: \"text-input\",\n    placeholder: \"write your message\",\n    onChange: e => setText(e.target.value),\n    onKeyPress: e => {\n      if (e.key === 'Enter') {\n        if (text) props.onSend(text);\n        setText('');\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => {\n      if (text) props.onSend(text);\n      setText('');\n    },\n    className: \"button\",\n    disabled: !text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"SEND\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/d3rickjy/Desktop/ChatApp/src/App.js"],"names":["React","useState","db","NamePicker","App","messages","setMessages","console","log","name","map","m","i","text","TextInput","props","setText","e","target","value","key","onSend"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CACA;;AACA,OAAO,WAAP;AACA,SAAQC,EAAR,QAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CACA;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACkBH,QAAQ,CAAC,EAAD,CAD1B;AAAA;AAAA,QACNI,QADM;AAAA,QACGC,WADH,kBAC+B;;;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAG,MAAjB;AACE,IAAA,GAAG,EAAG,KADR;AAEE,IAAA,GAAG,EAAG,mFAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAIE;AAAK,IAAA,SAAS,EAAG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADF,EAOI;AAAK,IAAA,KAAK,EAAG,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA2B,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAII,IAAI,IAAI,CAAE,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3B,CAPJ,CAFK,EAaP;AAAK,IAAA,SAAS,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAECJ,QAAQ,CAACK,GAAT,CAAa,CAACC,CAAD,EAAGC,CAAH,KAAO;AACnB,WAAO;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BD,CAA5B,CAAP;AAED,GAHA,CAFD,EAOA,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAGE,IAAD,IAAQ;AACzBP,MAAAA,WAAW,CAAC,CAACO,IAAD,EAAO,GAAGR,QAAV,CAAD,CAAX,CADyB,CACQ;AAClC,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPA,CAbO,CAAP;AA0BD;;AAED,SAASS,SAAT,CAAmBC,KAAnB,EAAyB;AAAA,mBACDd,QAAQ,CAAC,EAAD,CADP;AAAA;AAAA,MAClBY,IADkB;AAAA,MACZG,OADY,kBAEvB;;;AACA,SAAO;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AACE,IAAA,KAAK,EAAEH,IADT;AAEE,IAAA,SAAS,EAAC,YAFZ;AAGE,IAAA,WAAW,EAAC,oBAHd;AAIE,IAAA,QAAQ,EAAEI,CAAC,IAAGD,OAAO,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAJvB;AAKE,IAAA,UAAU,EAAEF,CAAC,IAAG;AACd,UAAGA,CAAC,CAACG,GAAF,KAAQ,OAAX,EAAoB;AAClB,YAAGP,IAAH,EAASE,KAAK,CAACM,MAAN,CAAaR,IAAb;AACTG,QAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,EAaL;AAAQ,IAAA,OAAO,EAAE,MAAK;AACpB,UAAGH,IAAH,EAASE,KAAK,CAACM,MAAN,CAAaR,IAAb;AACTG,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD,KAHD;AAGG,IAAA,SAAS,EAAC,QAHb;AAIE,IAAA,QAAQ,EAAE,CAACH,IAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbK,CAAP;AAqBD;;AACD,eAAeT,GAAf","sourcesContent":["import React, {useState} from 'react';\n//mport logo from './logo.svg';\nimport './App.css';\nimport {db} from './db'\nimport NamePicker from './namepicker'\n// import { BrowserRouter, Royte } from 'react-router-dom'\n\nfunction App() {\n  const [messages,setMessages] = useState([]) //initial state should be an empty array\n  console.log(messages)\n\n  return <main>\n\n    <header>\n      <div className = \"logo-wrap\">\n      <img className = \"logo\"\n        alt = \"pic\"\n        src = \"https://www.pngarts.com/files/1/Message-PNG-Image-with-Transparent-Background.png\"/>\n        <div className = \"title\">Talkie</div>\n        </div>\n        <div class = \"namepicker\"> <NamePicker onSave = {name => {}}/></div>\n    </header>\n \n\n  <div className = \"messages\">\n  {/* html + jsx comment */}\n  {messages.map((m,i)=>{\n    return <div className = \"message\">{m}</div>\n\n  })}\n      \n  <TextInput onSend={(text)=>{\n    setMessages([text, ...messages]) //... spread operator\n  }}/> \n  </div>\n\n  </main>\n}\n\nfunction TextInput(props){\n  var [text, setText] = useState('') \n  // normal js comment\n  return <div className=\"text-input-wrap\">\n    <input \n      value={text} \n      className=\"text-input\"\n      placeholder=\"write your message\"\n      onChange={e=> setText(e.target.value)}\n      onKeyPress={e=> {\n        if(e.key==='Enter') {\n          if(text) props.onSend(text)\n          setText('')\n        }\n      }}\n    />\n    <button onClick={()=> {\n      if(text) props.onSend(text)\n      setText('')\n    }} className=\"button\"\n      disabled={!text}>\n      SEND\n    </button>\n  </div>\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}