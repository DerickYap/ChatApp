{"ast":null,"code":"import _slicedToArray from \"/Users/d3rickjy/Desktop/ChatApp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/d3rickjy/Desktop/ChatApp/src/namepicker.js\";\nimport React, { useState, useRef } from 'react';\nimport { FiEdit, FiSave } from \"react-icons/fi\";\n\nfunction NamePicker(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showName = _useState4[0],\n        setShowName = _useState4[1];\n\n  const inputEl = useRef(null);\n  return React.createElement(\"div\", {\n    className: \"edit-username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, !showName && React.createElement(\"input\", {\n    value: name,\n    ref: inputEl,\n    className: \"name-input\",\n    onChange: e => setName(e.target.value),\n    onKeyPress: e => {\n      if (e.key === \"Enter\") props.onSave(name);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => {\n      inputEl.current.focus();\n      if (name) props.onSave(name);\n      setShowName(true);\n    },\n    className: \"name-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, showName ? React.createElement(FiEdit, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }) : React.createElement(FiSave, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })));\n}\n\nexport default NamePicker;","map":{"version":3,"sources":["/Users/d3rickjy/Desktop/ChatApp/src/namepicker.js"],"names":["React","useState","useRef","FiEdit","FiSave","NamePicker","props","name","setName","showName","setShowName","inputEl","e","target","value","key","onSave","current","focus"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAsC,OAAtC;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,gBAA/B;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AAAA,oBACEL,QAAQ,CAAC,EAAD,CADV;AAAA;AAAA,QACfM,IADe;AAAA,QACTC,OADS;;AAAA,qBAEUP,QAAQ,CAAC,KAAD,CAFlB;AAAA;AAAA,QAEfQ,QAFe;AAAA,QAELC,WAFK;;AAGtB,QAAMC,OAAO,GAAGT,MAAM,CAAC,IAAD,CAAtB;AACA,SAAO;AAAK,IAAA,SAAS,EAAG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF,CAACO,QAAD,IAAa;AAAO,IAAA,KAAK,EAAIF,IAAhB;AAAsB,IAAA,GAAG,EAAII,OAA7B;AACV,IAAA,SAAS,EAAG,YADF;AAEV,IAAA,QAAQ,EAAEC,CAAC,IAAGJ,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAFX;AAGV,IAAA,UAAU,EAAEF,CAAC,IAAI;AACb,UAAGA,CAAC,CAACG,GAAF,KAAU,OAAb,EAAsBT,KAAK,CAACU,MAAN,CAAaT,IAAb;AACzB,KALS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,EAQH;AAAQ,IAAA,OAAO,EAAI,MAAM;AACrBI,MAAAA,OAAO,CAACM,OAAR,CAAgBC,KAAhB;AACA,UAAGX,IAAH,EAASD,KAAK,CAACU,MAAN,CAAaT,IAAb;AACTG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAJD;AAIG,IAAA,SAAS,EAAG,aAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKD,QAAQ,GAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAgB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAL7B,CARG,CAAP;AAiBH;;AAED,eAAeJ,UAAf","sourcesContent":["import React, {useState, useRef} from 'react'\nimport { FiEdit, FiSave } from \"react-icons/fi\"\n\nfunction NamePicker(props){\n    const [name, setName] = useState('')\n    const [showName, setShowName] = useState(false)\n    const inputEl = useRef(null)\n    return <div className = \"edit-username\">\n        {!showName && <input value = {name} ref = {inputEl}\n            className = \"name-input\"\n            onChange={e=> setName(e.target.value)}\n            onKeyPress={e => {\n                if(e.key === \"Enter\") props.onSave(name)\n            }}\n        />}\n        <button onClick = {() => {\n            inputEl.current.focus()\n            if(name) props.onSave(name)\n            setShowName(true)\n        }} className = \"name-button\">\n            {showName ? <FiEdit /> : <FiSave />}\n        </button>\n        \n    </div>\n}\n\nexport default NamePicker"]},"metadata":{},"sourceType":"module"}