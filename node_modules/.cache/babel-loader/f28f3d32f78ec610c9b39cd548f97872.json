{"ast":null,"code":"import _slicedToArray from \"/Users/d3rickjy/Desktop/ChatApp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/d3rickjy/Desktop/ChatApp/src/App.js\";\nimport React, { useState } from 'react'; //mport logo from './logo.svg';\n\nimport './App.css';\nimport NamePicker from './namepicker';\n\nfunction App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        messages = _useState2[0],\n        setMessages = _useState2[1]; //initial state should be an empty array\n\n\n  console.log(messages);\n  return React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"logo-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"logo\",\n    alt: \"pic\",\n    src: \"https://www.pngarts.com/files/1/Message-PNG-Image-with-Transparent-Background.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Talkie\")), React.createElement(NamePicker, {\n    onSave: name => {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"messages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, messages.map((m, i) => {\n    return React.createElement(\"div\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, m);\n  }), React.createElement(TextInput, {\n    onSend: text => {\n      setMessages([text, ...messages]); //... spread operator\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })));\n}\n\nfunction TextInput(props) {\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        text = _useState4[0],\n        setText = _useState4[1]; //normal javascript comment\n\n\n  return React.createElement(\"div\", {\n    className: \"text-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: text,\n    placeholder: \"  Type a message, @name...\",\n    onChange: e => setText(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sendButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => {\n      if (text) props.onSend(text);\n      setText('');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Send\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/d3rickjy/Desktop/ChatApp/src/App.js"],"names":["React","useState","NamePicker","App","messages","setMessages","console","log","name","map","m","i","text","TextInput","props","setText","e","target","value","onSend"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CACA;;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACkBF,QAAQ,CAAC,EAAD,CAD1B;AAAA;AAAA,QACNG,QADM;AAAA,QACGC,WADH,kBAC+B;;;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAGA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAG,MAAjB;AACE,IAAA,GAAG,EAAG,KADR;AAEE,IAAA,GAAG,EAAG,mFAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAIE;AAAK,IAAA,SAAS,EAAG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADF,EAOI,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAII,IAAI,IAAI,CAAE,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAFK,EAaP;AAAK,IAAA,SAAS,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAECJ,QAAQ,CAACK,GAAT,CAAa,CAACC,CAAD,EAAGC,CAAH,KAAO;AACnB,WAAO;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BD,CAA5B,CAAP;AAED,GAHA,CAFD,EAOA,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAGE,IAAD,IAAQ;AACzBP,MAAAA,WAAW,CAAC,CAACO,IAAD,EAAO,GAAGR,QAAV,CAAD,CAAX,CADyB,CACQ;AAClC,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPA,CAbO,CAAP;AA0BD;;AAED,SAASS,SAAT,CAAmBC,KAAnB,EAAyB;AAAA,qBACCb,QAAQ,CAAC,EAAD,CADT;AAAA;AAAA,QAChBW,IADgB;AAAA,QACVG,OADU,kBAGvB;;;AAGA,SAAO;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AAAO,IAAA,KAAK,EAAEH,IAAd;AACA,IAAA,WAAW,EAAE,4BADb;AAEA,IAAA,QAAQ,EAAEI,CAAC,IAAED,OAAO,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,EAML;AAAK,IAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAQ,IAAA,OAAO,EAAE,MAAK;AACpB,UAAIN,IAAJ,EAAUE,KAAK,CAACK,MAAN,CAAaP,IAAb;AACRG,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,CANK,CAAP;AAgBD;;AACD,eAAeZ,GAAf","sourcesContent":["import React, {useState} from 'react';\n//mport logo from './logo.svg';\nimport './App.css';\nimport NamePicker from './namepicker'\n\nfunction App() {\n  const [messages,setMessages] = useState([]) //initial state should be an empty array\n  console.log(messages)\n\n\n  return <main>\n\n    <header>\n      <div className = \"logo-wrap\">\n      <img className = \"logo\"\n        alt = \"pic\"\n        src = \"https://www.pngarts.com/files/1/Message-PNG-Image-with-Transparent-Background.png\"/>\n        <div className = \"title\">Talkie</div>\n        </div>\n        <NamePicker onSave = {name => {}}/>\n    </header>\n \n\n  <div className = \"messages\">\n  {/* html + jsx comment */}\n  {messages.map((m,i)=>{\n    return <div className = \"message\">{m}</div>\n\n  })}\n      \n  <TextInput onSend={(text)=>{\n    setMessages([text, ...messages]) //... spread operator\n  }}/> \n  </div>\n\n  </main>\n}\n\nfunction TextInput(props){\n  const [text, setText] = useState('')\n\n  //normal javascript comment\n\n\n  return <div className=\"text-input\">\n    <input value={text} \n    placeholder= \"  Type a message, @name...\"\n    onChange={e=>setText(e.target.value)}\n    />\n\n    <div className = \"sendButton\">\n    <button onClick={()=> {\n      if (text) props.onSend(text)\n        setText('')\n    }}>\n      Send\n    </button>\n    </div>\n    \n  </div>\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}