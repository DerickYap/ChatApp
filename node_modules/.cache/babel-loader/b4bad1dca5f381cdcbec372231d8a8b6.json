{"ast":null,"code":"import _slicedToArray from \"/Users/d3rickjy/Desktop/ChatApp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/d3rickjy/Desktop/ChatApp/src/App.js\";\nimport React, { useState } from 'react'; //mport logo from './logo.svg';\n\nimport './App.css';\nimport { db, useDB } from './db';\nimport NamePicker from './namepicker'; // import { BrowserRouter, Royte } from 'react-router-dom'\n\nfunction App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        messages = _useState2[0],\n        setMessages = _useState2[1]; //initial state should be an empty array\n\n\n  console.log(messages);\n  return React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"logo-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"logo\",\n    alt: \"logo\",\n    src: \"https://images.coollogo.com/images/prism-large-green.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), \"Chatter\"), React.createElement(NamePicker, {\n    onSave: setName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"messages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, messages.map((m, i) => {\n    return React.createElement(\"div\", {\n      key: i,\n      className: \"message-wrap\",\n      from: m.name === name ? 'me' : 'you',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"msg-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, m.name), React.createElement(\"div\", {\n      className: \"msg-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, m.text)));\n  })), React.createElement(TextInput, {\n    onSend: text => {\n      db.send({\n        text,\n        name,\n        ts: new Date(),\n        room\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n}\n\nfunction TextInput(props) {\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1]; // normal js comment\n\n\n  return React.createElement(\"div\", {\n    className: \"text-input-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: text,\n    className: \"text-input\",\n    placeholder: \"write your message\",\n    onChange: e => setText(e.target.value),\n    onKeyPress: e => {\n      if (e.key === 'Enter') {\n        if (text) props.onSend(text);\n        setText('');\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => {\n      if (text) props.onSend(text);\n      setText('');\n    },\n    className: \"button\",\n    disabled: !text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"SEND\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/d3rickjy/Desktop/ChatApp/src/App.js"],"names":["React","useState","db","useDB","NamePicker","App","messages","setMessages","console","log","setName","map","m","i","name","text","send","ts","Date","room","TextInput","props","setText","e","target","value","key","onSend"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n//mport logo from './logo.svg';\nimport './App.css';\nimport {db, useDB} from './db'\nimport NamePicker from './namepicker'\n// import { BrowserRouter, Royte } from 'react-router-dom'\n\nfunction App() {\n  const [messages,setMessages] = useState([]) //initial state should be an empty array\n  console.log(messages)\n\n  return <main>\n\n    <header>\n      <div className=\"logo-wrap\">\n        <img className=\"logo\"\n          alt=\"logo\"\n          src=\"https://images.coollogo.com/images/prism-large-green.png\" \n        />\n        Chatter\n      </div>\n      <NamePicker onSave={setName} />\n    </header>\n\n    <div className=\"messages\">\n      {messages.map((m,i)=>{\n        return <div key={i} className=\"message-wrap\"\n          from={m.name===name?'me':'you'}>\n          <div className=\"message\">\n            <div className=\"msg-name\">{m.name}</div>\n            <div className=\"msg-text\">{m.text}</div>\n          </div>\n        </div>\n      })}\n    </div>\n\n    <TextInput onSend={(text)=> {\n      db.send({\n        text, name, ts: new Date(), room\n      })\n    }} />\n    \n  </main>\n}\n\nfunction TextInput(props){\n  var [text, setText] = useState('') \n  // normal js comment\n  return <div className=\"text-input-wrap\">\n    <input \n      value={text} \n      className=\"text-input\"\n      placeholder=\"write your message\"\n      onChange={e=> setText(e.target.value)}\n      onKeyPress={e=> {\n        if(e.key==='Enter') {\n          if(text) props.onSend(text)\n          setText('')\n        }\n      }}\n    />\n    <button onClick={()=> {\n      if(text) props.onSend(text)\n      setText('')\n    }} className=\"button\"\n      disabled={!text}>\n      SEND\n    </button>\n  </div>\n}\n\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}