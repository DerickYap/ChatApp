{"ast":null,"code":"import _toConsumableArray from\"/Users/d3rickjy/Desktop/ChatApp/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/d3rickjy/Desktop/ChatApp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';//mport logo from './logo.svg';\nimport'./App.css';import{db,useDB}from'. /db';import NamePicker from'./namepicker';import{BrowserRouter,Royte}from'react-router-dom';function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];//initial state should be an empty array\nconsole.log(messages);return React.createElement(\"main\",null,React.createElement(\"header\",null,React.createElement(\"div\",{className:\"logo-wrap\"},React.createElement(\"img\",{className:\"logo\",alt:\"pic\",src:\"https://www.pngarts.com/files/1/Message-PNG-Image-with-Transparent-Background.png\"}),React.createElement(\"div\",{className:\"title\"},\"Talkie\")),React.createElement(\"div\",{class:\"namepicker\"},\" \",React.createElement(NamePicker,{onSave:function onSave(name){}}))),React.createElement(\"div\",{className:\"messages\"},messages.map(function(m,i){return React.createElement(\"div\",{className:\"message\"},m);}),React.createElement(TextInput,{onSend:function onSend(text){setMessages([text].concat(_toConsumableArray(messages)));//... spread operator\n}})));}function TextInput(props){var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),text=_useState4[0],setText=_useState4[1];//normal javascript comment\nreturn React.createElement(\"div\",{className:\"text-input\"},React.createElement(\"input\",{value:text,placeholder:\"  Type a message, @name...\",onChange:function onChange(e){return setText(e.target.value);}}),React.createElement(\"div\",{className:\"sendButton\"},React.createElement(\"button\",{onClick:function onClick(){if(text)props.onSend(text);setText('');}},\"Send\")));}export default App;","map":{"version":3,"sources":["/Users/d3rickjy/Desktop/ChatApp/src/App.js"],"names":["React","useState","db","useDB","NamePicker","BrowserRouter","Royte","App","messages","setMessages","console","log","name","map","m","i","text","TextInput","props","setText","e","target","value","onSend"],"mappings":"4OAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA;AACA,MAAO,WAAP,CACA,OAAQC,EAAR,CAAYC,KAAZ,KAAwB,OAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,OAASC,aAAT,CAAwBC,KAAxB,KAAqC,kBAArC,CAEA,QAASC,CAAAA,GAAT,EAAe,eACkBN,QAAQ,CAAC,EAAD,CAD1B,wCACNO,QADM,eACGC,WADH,eAC+B;AAC5CC,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAGA,MAAO,iCAEL,kCACE,2BAAK,SAAS,CAAG,WAAjB,EACA,2BAAK,SAAS,CAAG,MAAjB,CACE,GAAG,CAAG,KADR,CAEE,GAAG,CAAG,mFAFR,EADA,CAIE,2BAAK,SAAS,CAAG,OAAjB,WAJF,CADF,CAOI,2BAAK,KAAK,CAAG,YAAb,MAA2B,oBAAC,UAAD,EAAY,MAAM,CAAI,gBAAAI,IAAI,CAAI,CAAE,CAAhC,EAA3B,CAPJ,CAFK,CAaP,2BAAK,SAAS,CAAG,UAAjB,EAECJ,QAAQ,CAACK,GAAT,CAAa,SAACC,CAAD,CAAGC,CAAH,CAAO,CACnB,MAAO,4BAAK,SAAS,CAAG,SAAjB,EAA4BD,CAA5B,CAAP,CAED,CAHA,CAFD,CAOA,oBAAC,SAAD,EAAW,MAAM,CAAE,gBAACE,IAAD,CAAQ,CACzBP,WAAW,EAAEO,IAAF,4BAAWR,QAAX,GAAX,CAAiC;AAClC,CAFD,EAPA,CAbO,CAAP,CA0BD,CAED,QAASS,CAAAA,SAAT,CAAmBC,KAAnB,CAAyB,gBACCjB,QAAQ,CAAC,EAAD,CADT,yCAChBe,IADgB,eACVG,OADU,eAGvB;AAGA,MAAO,4BAAK,SAAS,CAAC,YAAf,EACL,6BAAO,KAAK,CAAEH,IAAd,CACA,WAAW,CAAE,4BADb,CAEA,QAAQ,CAAE,kBAAAI,CAAC,QAAED,CAAAA,OAAO,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT,EAFX,EADK,CAML,2BAAK,SAAS,CAAG,YAAjB,EACA,8BAAQ,OAAO,CAAE,kBAAK,CACpB,GAAIN,IAAJ,CAAUE,KAAK,CAACK,MAAN,CAAaP,IAAb,EACRG,OAAO,CAAC,EAAD,CAAP,CACH,CAHD,SADA,CANK,CAAP,CAgBD,CACD,cAAeZ,CAAAA,GAAf","sourcesContent":["import React, {useState} from 'react';\n//mport logo from './logo.svg';\nimport './App.css';\nimport {db, useDB} from '. /db'\nimport NamePicker from './namepicker'\nimport { BrowserRouter, Royte } from 'react-router-dom'\n\nfunction App() {\n  const [messages,setMessages] = useState([]) //initial state should be an empty array\n  console.log(messages)\n\n\n  return <main>\n\n    <header>\n      <div className = \"logo-wrap\">\n      <img className = \"logo\"\n        alt = \"pic\"\n        src = \"https://www.pngarts.com/files/1/Message-PNG-Image-with-Transparent-Background.png\"/>\n        <div className = \"title\">Talkie</div>\n        </div>\n        <div class = \"namepicker\"> <NamePicker onSave = {name => {}}/></div>\n    </header>\n \n\n  <div className = \"messages\">\n  {/* html + jsx comment */}\n  {messages.map((m,i)=>{\n    return <div className = \"message\">{m}</div>\n\n  })}\n      \n  <TextInput onSend={(text)=>{\n    setMessages([text, ...messages]) //... spread operator\n  }}/> \n  </div>\n\n  </main>\n}\n\nfunction TextInput(props){\n  const [text, setText] = useState('')\n\n  //normal javascript comment\n\n\n  return <div className=\"text-input\">\n    <input value={text} \n    placeholder= \"  Type a message, @name...\"\n    onChange={e=>setText(e.target.value)}\n    />\n\n    <div className = \"sendButton\">\n    <button onClick={()=> {\n      if (text) props.onSend(text)\n        setText('')\n    }}>\n      Send\n    </button>\n    </div>\n    \n  </div>\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}